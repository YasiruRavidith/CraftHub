# Generated by Django 5.2.1 on 2025-05-09 08:15

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0002_alter_orderitem_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('interval', models.CharField(choices=[('month', 'Monthly'), ('year', 'Yearly'), ('week', 'Weekly'), ('day', 'Daily')], default='month', max_length=10)),
                ('interval_count', models.PositiveSmallIntegerField(default=1, help_text='e.g., 1 for every month, 3 for every 3 months')),
                ('stripe_plan_id', models.CharField(blank=True, help_text='ID from Stripe or other payment gateway', max_length=255, null=True)),
                ('paypal_plan_id', models.CharField(blank=True, help_text='ID from PayPal', max_length=255, null=True)),
                ('features', models.JSONField(blank=True, default=list, help_text='List of features for this plan')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this plan can be subscribed to')),
                ('display_order', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'ordering': ['display_order', 'price'],
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('past_due', 'Past Due'), ('cancelled', 'Cancelled'), ('trialing', 'Trialing'), ('incomplete', 'Incomplete'), ('incomplete_expired', 'Incomplete Expired'), ('unpaid', 'Unpaid')], default='inactive', max_length=20)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('current_period_start', models.DateTimeField(blank=True, null=True)),
                ('current_period_end', models.DateTimeField(blank=True, null=True)),
                ('cancel_at_period_end', models.BooleanField(default=False)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('trial_start', models.DateTimeField(blank=True, null=True)),
                ('trial_end', models.DateTimeField(blank=True, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('stripe_customer_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('paypal_subscription_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_subscriptions', to='payments_monetization.subscriptionplan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('subscription_payment', 'Subscription Payment'), ('order_payment', 'Order Payment'), ('platform_fee', 'Platform Fee'), ('payout', 'Payout'), ('refund', 'Refund'), ('vas_payment', 'Value Added Service Payment'), ('other', 'Other')], max_length=30)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('disputed', 'Disputed')], default='pending', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('payment_gateway', models.CharField(blank=True, help_text='e.g., Stripe, PayPal', max_length=50, null=True)),
                ('gateway_transaction_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('gateway_charge_id', models.CharField(blank=True, max_length=255, null=True)),
                ('gateway_response', models.JSONField(blank=True, default=dict, help_text='Full response from gateway, for debugging', null=True)),
                ('related_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='orders.order')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to=settings.AUTH_USER_MODEL)),
                ('related_subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='payments_monetization.usersubscription')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
