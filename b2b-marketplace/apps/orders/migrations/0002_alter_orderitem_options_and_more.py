# Generated by Django 5.2.1 on 2025-05-09 08:15

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('listings', '0002_certification_tag_alter_design_options_and_more'),
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='orderitem',
            options={'ordering': ['-created_at']},
        ),
        migrations.RenameField(
            model_name='order',
            old_name='total_amount',
            new_name='order_total',
        ),
        migrations.RemoveField(
            model_name='orderitem',
            name='content_type',
        ),
        migrations.RemoveField(
            model_name='orderitem',
            name='object_id',
        ),
        migrations.RemoveField(
            model_name='orderitem',
            name='product_name_snapshot',
        ),
        migrations.RemoveField(
            model_name='orderitem',
            name='subtotal',
        ),
        migrations.RemoveField(
            model_name='orderitem',
            name='unit_price_snapshot',
        ),
        migrations.AddField(
            model_name='order',
            name='billing_address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_intent_id',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='order',
            name='shipping_address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='orderitem',
            name='custom_item_description',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='design',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='listings.design'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='material',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='listings.material'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='seller',
            field=models.ForeignKey(limit_choices_to={'user_type__in': ['seller', 'manufacturer', 'designer']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sold_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='unit_price',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Price per unit at the time of order', max_digits=10),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='orderitem',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='buyer',
            field=models.ForeignKey(limit_choices_to={'user_type': 'buyer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders_placed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='order',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='order',
            name='status',
            field=models.CharField(choices=[('pending_payment', 'Pending Payment'), ('payment_failed', 'Payment Failed'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('completed', 'Completed'), ('cancelled_by_buyer', 'Cancelled by Buyer'), ('cancelled_by_seller', 'Cancelled by Seller'), ('refunded', 'Refunded')], default='pending_payment', max_length=30),
        ),
        migrations.AlterField(
            model_name='orderitem',
            name='quantity',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('quantity_offered', models.PositiveIntegerField(blank=True, null=True)),
                ('lead_time_days', models.PositiveIntegerField(blank=True, null=True)),
                ('valid_until', models.DateField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('viewed', 'Viewed by Buyer'), ('accepted', 'Accepted by Buyer'), ('rejected', 'Rejected by Buyer'), ('expired', 'Expired'), ('ordered', 'Converted to Order')], default='submitted', max_length=20)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotes_received', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(limit_choices_to={'user_type__in': ['seller', 'manufacturer']}, on_delete=django.db.models.deletion.CASCADE, related_name='quotes_provided', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='order',
            name='related_quote',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_from_quote', to='orders.quote'),
        ),
        migrations.CreateModel(
            name='RFQ',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('specifications_file', models.FileField(blank=True, null=True, upload_to='rfqs/specifications/')),
                ('quantity_required', models.PositiveIntegerField(blank=True, null=True)),
                ('unit_of_measurement', models.CharField(blank=True, max_length=50, null=True)),
                ('deadline_for_quotes', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('open', 'Open for Quotes'), ('closed', 'Closed for Quotes'), ('awarded', 'Awarded'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('buyer', models.ForeignKey(limit_choices_to={'user_type': 'buyer'}, on_delete=django.db.models.deletion.CASCADE, related_name='rfqs_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='quote',
            name='rfq',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quotes', to='orders.rfq'),
        ),
    ]
